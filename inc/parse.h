#ifndef PARSE_H_
#define PARSE_H_

#include "main.h"

/**
* \brief Главная функция парсинга строки
*
* Функция анализирует строку и вычисляет коэффициенты. Уравнение должно быть записано в виде ax^2+bx+c=0.
* Символы умножения '*' и деления '/' в входной строке не допускаются. 
* Ввод 2*x^2-1=0 является не правильным, нужно писать 2x^2-1=0.
* Каждый параметр может встречаться только один раз, иначе в вычислениях будет применяться последний.
* В примере 2x^2+x^2-1=0, 2x^2 будет проигнорированно, программа выведет корни -1; 1.
* 
* \param[in,out] params Указатель структуру коэффициентов квадратного уравнения.
* \param[in]     buffer Входная строка
* 
* \return Возвращает указатель на структуру. nullptr в случае ошибки.
*/
Coefficients* ParseString(const char* buffer, Coefficients* params);

/**
* \brief Функция поиска числа в строке
*
* Функция ищет в строке первое слева число в строке, и устанавливает указатель buffer на следующий за числом символ.
* 
* \param[out] number Указатель на слудеющее в строке число
* \param[in]  buffer Входная строка
* 
* \return false в случае ошибки, true в случае успешного выполнения
*/
bool ParseNextNumber(const char** buffer, double* number);

/**
* \brief Функция поиска параметра в строке
*
* Функция пищет первый слева параметр в строке, и устанавливает указатель buffer на следующий за параметром символ.
* 
* \param[in] paramName Символ параметра (a, b, x, ...), встречавшеося до этого в строке. '\0' если функция вызывается впервые.
* \param[in] buffer Входная строка
* 
* \return указатель на тип параметра (x^2, x или свободный член)
*/
ParamType* ParseNextParam(const char** buffer, char* paramName);

/**
* \brief Функция обработки окончания строки
*
* Функция обрабатывает символы после знака '='. Выдаёт предупреждение, если ввод не оканчивается на "= 0".
* 
* \param[in] buffer  Входная строка
*/
bool ParseEnding(const char** buffer);

/**
* \brief Функция перевода строки цифр в double
*
* Функция переводит строку цифр в double.
* 
* \param[in] start Указатель на первый символ числа
* \param[in] end Указатель на послений символ числа
* 
* \return Возвращает полученное число
*/
double ConvertToDouble(const char* start, const char* end);

/**
* \brief Функция выводит предупреждение о двойном использовании параметров
*
* Функция выводит предупреждение, что введены два параметра. Например 2x+10x-1=0. Функция выведет, что значение 2x будет проигнорированно.
* 
* \param[in] paramType Тип параметра (x^2, x, свободный член)
* \param[in] oldNumber Старое значение параметра
* \param[in] newNumber Новое значение параметра
*/
void ParamWarning(ParamType paramType, double oldNumber, double newNumber);

/**
* \brief Функция, определяющая является ли символ точкой или запятой
* 
* \param[in] c Проверяемый символ
* 
* \return true, если символ точка или запятая
*/
bool IsSeparator(char c);

/**
* \brief Функция, сравнивающая два числа
* 
* \param[in] a,b Сравниваемые числа
* 
* \return true, если числа равны
*/
bool CompareNumbers(double a, double b);

/**
* \brief Функция, определяющая является ли символ '+' или '-'
* 
* \param[in] c Проверяемый символ
* 
* \return true, если символ '+' или '-'
*/
bool IsSign(char c);

#endif // !PARESE_H_
